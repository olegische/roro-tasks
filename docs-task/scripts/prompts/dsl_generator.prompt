На основе анализа документа и запроса пользователя создай DSL шаблон в формате YAML для извлечения запрашиваемой информации.

Шаблон должен включать:

1. Якоря (anchors):
   - Текстовые элементы, рядом с которыми находится искомая информация
   - Учитывай возможные вариации написания текста (например, "ИНН/КПП", "ИНН/КПП покупателя")
   - Для каждого якоря укажи порог совпадения (text_threshold)
   - Определи тип отношения (relation: main/top/right/bottom/left)

2. Области извлечения (extraction_area):
   - Относительные координаты для поиска информации
   - Укажи delta_x1, delta_y1, delta_x2, delta_y2 для определения области поиска
   - Учитывай типичное расположение данных относительно якоря

3. Параметры постобработки:
   - Регулярные выражения для извлечения точных значений
   - Правила форматирования и валидации данных
   - Специфические правила для разных типов данных (даты, суммы, ИНН и т.д.)

Формат шаблона должен соответствовать следующей структуре:

```yaml
intersection_metric:
  name: Overlap
  threshold: 0.6

extraction_area:
  delta_x1: [число]
  delta_y1: [число]
  delta_x2: [число]
  delta_y2: [число]

type: ChainAttribute
params:
  attributes:
    - type: AnchorsBasedAttribute
      priority: [число]
      params:
        anchors:
          - text: [текст якоря]
            text_threshold: [число от 0 до 1]
            repetition_index: [число]
            multiline: [true/false]
            relation: [main/top/right/bottom/left]
            intersection_metric: ${intersection_metric}
            extraction_area: ${extraction_area}
  postprocessing_pipe:
    - instance_name: RegExpPostprocessor
      params:
        regexp_value: [регулярное выражение]
```

Учитывай специфику документа и типа запрашиваемых данных при создании шаблона. Например:
- Для ИНН используй регулярное выражение, проверяющее 10 или 12 цифр
- Для дат учитывай различные форматы записи
- Для денежных сумм обрабатывай разделители и валюту
